[{"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/index.js":"1","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/App.js":"2","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/reportWebVitals.js":"3","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/store/index.js":"4","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/containers/index.js":"5","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/store/reducers/index.js":"6","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/containers/HomePageContainer.js":"7","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/containers/AllCampusesContainer.js":"8","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/containers/AllStudentsContainer.js":"9","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/containers/NewStudentContainer.js":"10","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/containers/CampusContainer.js":"11","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/containers/StudentContainer.js":"12","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/store/reducers/campuses.js":"13","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/store/reducers/campus.js":"14","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/store/reducers/student.js":"15","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/store/reducers/students.js":"16","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/containers/Header.js":"17","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/store/thunks.js":"18","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/views/HomePageView.js":"19","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/views/AllStudentsView.js":"20","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/views/NewStudentView.js":"21","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/views/index.js":"22","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/store/actions/actionTypes.js":"23","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/store/actions/actionCreators.js":"24","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/views/StudentView.js":"25","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/views/CampusView.js":"26","/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/views/AllCampusesView.js":"27","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/index.js":"28","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/reportWebVitals.js":"29","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/App.js":"30","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/store/index.js":"31","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/index.js":"32","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/store/reducers/index.js":"33","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/HomePageContainer.js":"34","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/StudentContainer.js":"35","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/EditStudentContainer.js":"36","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/EditCampusContainer.js":"37","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/NewStudentContainer.js":"38","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/AllCampusesContainer.js":"39","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/AllStudentsContainer.js":"40","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/CampusContainer.js":"41","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/NewCampusContainer.js":"42","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/store/reducers/campuses.js":"43","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/store/reducers/campus.js":"44","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/store/reducers/students.js":"45","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/store/reducers/student.js":"46","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/Header.js":"47","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/store/thunks.js":"48","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/HomePageView.js":"49","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/NewStudentView.js":"50","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/AllStudentsView.js":"51","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/NewCampusView.js":"52","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/index.js":"53","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/store/actions/actionTypes.js":"54","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/store/actions/actionCreators.js":"55","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/AllCampusesView.js":"56","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/EditCampusView.js":"57","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/EditStudentView.js":"58","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/CampusView.js":"59","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/StudentView.js":"60"},{"size":361,"mtime":1658104329515,"results":"61","hashOfConfig":"62"},{"size":967,"mtime":1649682146000,"results":"63","hashOfConfig":"62"},{"size":362,"mtime":1649682146000,"results":"64","hashOfConfig":"62"},{"size":1392,"mtime":1649682146000,"results":"65","hashOfConfig":"62"},{"size":886,"mtime":1649682146000,"results":"66","hashOfConfig":"62"},{"size":820,"mtime":1649682146000,"results":"67","hashOfConfig":"62"},{"size":636,"mtime":1649682146000,"results":"68","hashOfConfig":"62"},{"size":2309,"mtime":1649682146000,"results":"69","hashOfConfig":"62"},{"size":2287,"mtime":1649682146000,"results":"70","hashOfConfig":"62"},{"size":3019,"mtime":1649682146000,"results":"71","hashOfConfig":"62"},{"size":2038,"mtime":1649682146000,"results":"72","hashOfConfig":"62"},{"size":1974,"mtime":1649682146000,"results":"73","hashOfConfig":"62"},{"size":877,"mtime":1649682146000,"results":"74","hashOfConfig":"62"},{"size":950,"mtime":1649682146000,"results":"75","hashOfConfig":"62"},{"size":943,"mtime":1649682146000,"results":"76","hashOfConfig":"62"},{"size":1204,"mtime":1649682146000,"results":"77","hashOfConfig":"62"},{"size":2208,"mtime":1649682146000,"results":"78","hashOfConfig":"62"},{"size":3999,"mtime":1658103263772,"results":"79","hashOfConfig":"62"},{"size":455,"mtime":1649682146000,"results":"80","hashOfConfig":"62"},{"size":1375,"mtime":1649682146000,"results":"81","hashOfConfig":"62"},{"size":2487,"mtime":1649682146000,"results":"82","hashOfConfig":"62"},{"size":841,"mtime":1649682146000,"results":"83","hashOfConfig":"62"},{"size":420,"mtime":1649682146000,"results":"84","hashOfConfig":"62"},{"size":993,"mtime":1649682146000,"results":"85","hashOfConfig":"62"},{"size":579,"mtime":1649682146000,"results":"86","hashOfConfig":"62"},{"size":1002,"mtime":1649682146000,"results":"87","hashOfConfig":"62"},{"size":1224,"mtime":1649682146000,"results":"88","hashOfConfig":"62"},{"size":931,"mtime":1658156381647,"results":"89","hashOfConfig":"90"},{"size":362,"mtime":1649682146000,"results":"91","hashOfConfig":"90"},{"size":1270,"mtime":1658104245014,"results":"92","hashOfConfig":"90"},{"size":1392,"mtime":1658104398813,"results":"93","hashOfConfig":"90"},{"size":1103,"mtime":1658105029798,"results":"94","hashOfConfig":"90"},{"size":820,"mtime":1658104513735,"results":"95","hashOfConfig":"90"},{"size":636,"mtime":1658105011658,"results":"96","hashOfConfig":"90"},{"size":2544,"mtime":1658105146181,"results":"97","hashOfConfig":"90"},{"size":3683,"mtime":1658104955668,"results":"98","hashOfConfig":"90"},{"size":3478,"mtime":1658104941207,"results":"99","hashOfConfig":"90"},{"size":4414,"mtime":1658105117933,"results":"100","hashOfConfig":"90"},{"size":2533,"mtime":1658104736362,"results":"101","hashOfConfig":"90"},{"size":2313,"mtime":1658104765429,"results":"102","hashOfConfig":"90"},{"size":3032,"mtime":1658104797086,"results":"103","hashOfConfig":"90"},{"size":3747,"mtime":1658105106950,"results":"104","hashOfConfig":"90"},{"size":1274,"mtime":1658104464416,"results":"105","hashOfConfig":"90"},{"size":950,"mtime":1658104440625,"results":"106","hashOfConfig":"90"},{"size":1204,"mtime":1658104588034,"results":"107","hashOfConfig":"90"},{"size":943,"mtime":1658104577419,"results":"108","hashOfConfig":"90"},{"size":2271,"mtime":1658104997879,"results":"109","hashOfConfig":"90"},{"size":4460,"mtime":1658104382622,"results":"110","hashOfConfig":"90"},{"size":773,"mtime":1658105581007,"results":"111","hashOfConfig":"90"},{"size":3243,"mtime":1658105620064,"results":"112","hashOfConfig":"90"},{"size":1923,"mtime":1658105499160,"results":"113","hashOfConfig":"90"},{"size":2536,"mtime":1658105601985,"results":"114","hashOfConfig":"90"},{"size":1028,"mtime":1658105592307,"results":"115","hashOfConfig":"90"},{"size":548,"mtime":1658104653182,"results":"116","hashOfConfig":"90"},{"size":1369,"mtime":1658104629236,"results":"117","hashOfConfig":"90"},{"size":2279,"mtime":1658105458208,"results":"118","hashOfConfig":"90"},{"size":3269,"mtime":1658105532599,"results":"119","hashOfConfig":"90"},{"size":3145,"mtime":1658105557492,"results":"120","hashOfConfig":"90"},{"size":1832,"mtime":1658105514108,"results":"121","hashOfConfig":"90"},{"size":1789,"mtime":1658105646523,"results":"122","hashOfConfig":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ma5dcq",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"158","messages":"159","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n87xtw",{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/index.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/App.js",[],["251","252"],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/reportWebVitals.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/store/index.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/containers/index.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/store/reducers/index.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/containers/HomePageContainer.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/containers/AllCampusesContainer.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/containers/AllStudentsContainer.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/containers/NewStudentContainer.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/containers/CampusContainer.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/containers/StudentContainer.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/store/reducers/campuses.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/store/reducers/campus.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/store/reducers/student.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/store/reducers/students.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/containers/Header.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/store/thunks.js",["253"],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/views/HomePageView.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/views/AllStudentsView.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/views/NewStudentView.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/views/index.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/store/actions/actionTypes.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/store/actions/actionCreators.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/views/StudentView.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/views/CampusView.js",[],"/Users/shareenawiggins/Desktop/school/frontend/client-code/src/components/views/AllCampusesView.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/index.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/reportWebVitals.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/App.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/store/index.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/index.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/store/reducers/index.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/HomePageContainer.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/StudentContainer.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/EditStudentContainer.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/EditCampusContainer.js",["254","255"],"import Header from './Header';\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchAllStudentsThunk, fetchStudentThunk } from \"../../store/thunks\";\nimport { fetchAllCampusesThunk, fetchCampusThunk } from \"../../store/thunks\";\nimport { editCampusThunk } from \"../../store/thunks\";\nimport { EditCampusView } from \"../views\";\nimport { Redirect } from 'react-router-dom';\n\nclass EditCampusContainer extends Component {\n    // Get campus data from database\n    componentDidMount() {\n      //getting campus ID from url\n      this.props.fetchCampus(this.props.match.params.id);\n      this.props.fetchAllStudents();\n      console.log(\"checking -->\"); //testing purposes\n      console.log(this.props.campus.students); //testing purposes\n    }\n  \n    constructor(props){\n      super(props);\n      let campus = this.props.campus\n      this.state = {\n        campus: campus,\n        name: campus.name,\n        address: campus.address,\n        imageUrl: campus.imageUrl,\n        description: campus.description,\n        campusId: campus.id, //id of campus we are editing\n        redirect: false\n    };\n    }\n  \n    handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    }\n  \n    // Take action after user click the submit button\n    handleSubmit = async event => {\n      event.preventDefault();  // Prevent browser reload/refresh after submit.\n    \n        // let addedStudent = this.props.fetchStudent(this.state.studentId);\n        // this.state.studentsArray.push(addedStudent);\n        let campus = this.state.campus\n        campus.name = this.state.name\n        campus.address = this.state.address\n        campus.imageUrl = this.state.imageUrl\n        campus.description = this.state.description\n        \n        await this.props.editCampus(campus);\n  \n        // Update state, and trigger redirect to show the edited campus.\n        this.setState({\n          name: '',\n          address: '',\n          imageUrl: '',\n          description: '',\n          redirect: true\n        });\n      \n    }\n  \n    // Render Campus view by passing campus data as props to the corresponding View component\n    render() {\n      if(this.state.redirect) {\n        return (<Redirect to={`/campus/${this.props.match.params.id}`}/>)\n      }\n      return (\n        <div>\n          <Header />\n          <EditCampusView campus={this.props.campus}\n          handleChange = {this.handleChange} \n          handleSubmit={this.handleSubmit}\n          allStudents={this.props.allStudents}\n          />\n        </div>\n      );\n    }\n  }\n  \n  const mapState = (state) => {\n    return {\n      campus: state.campus,\n      allStudents: state.allStudents\n    };\n  };\n  \n  // 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n  // The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\n  const mapDispatch = (dispatch) => {\n    return {\n      fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n      editCampus: (campus) => dispatch(editCampusThunk(campus)),\n      fetchAllStudents: () => dispatch(fetchAllStudentsThunk())\n    };\n  };\n  \n  \n  // Export store-connected container by default\n  // EditCampusContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n  // (and re-read the values when the Store State updates).\n  export default connect(mapState, mapDispatch)(EditCampusContainer);","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/NewStudentContainer.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/AllCampusesContainer.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/AllStudentsContainer.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/CampusContainer.js",["256"],"/*==================================================\nCampusContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchCampusThunk } from \"../../store/thunks\";\n\nimport { CampusView } from \"../views\";\n\nclass CampusContainer extends Component {\n  // Get the specific campus data from back-end database\n  componentDidMount() {\n    // Get campus ID from URL (API link)\n    this.props.fetchCampus(this.props.match.params.id);\n    window.scrollTo(0,0);\n  }\n\n  componentDidUpdate(){\n    let studentArray = document.querySelectorAll([\"div.studentLink\"])\n    var counter = 0; // Alternate between students\n    for(let i = 0; i < studentArray.length; i++){\n      if(counter % 2 == 0)\n      {\n        studentArray[i].style.backgroundColor = '#63229A';\n        studentArray[i].style.color = 'white';\n        studentArray[i].onmouseenter = function() {imageHover(studentArray[i])};\n        studentArray[i].onmouseleave = function() {imageHoverLeave(studentArray[i])};\n      }\n      studentArray[i].style.borderTopWidth = '0px';\n      studentArray[i].style.borderBottomWidth = '0px';\n      \n      counter++;\n    }\n\n    if (studentArray.length){\n      studentArray[0].style.borderTopWidth = '3px';\n      studentArray[studentArray.length-1].style.borderBottomWidth = '3px';\n    }\n  }\n  \n  // Render a Campus view by passing campus data as props to the corresponding View component\n  render() {\n    return (\n      <div>\n        <Header />\n        <CampusView campus={this.props.campus} />\n      </div>\n    );\n  }\n}\n\nfunction imageHover(x) {\n  if(x)\n  {\n    x.style.color = '#B19CD9';\n  }\n}\n\nfunction imageHoverLeave(x){\n  if(x){\n    x.style.color = 'white';\n  }\n}\n\n// The following 2 input arguments are passed to the \"connect\" function used by \"CampusContainer\" component to connect to Redux Store.\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"campus\".\nconst mapState = (state) => {\n  return {\n    campus: state.campus,  // Get the State object from Reducer \"campus\"\n  };\n};\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n  };\n};\n\n// Export store-connected container by default\n// CampusContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default connect(mapState, mapDispatch)(CampusContainer);","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/NewCampusContainer.js",["257","258"],"import Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport NewCampusView from '../views/NewCampusView';\nimport { addCampusThunk, fetchAllCampusesThunk } from '../../store/thunks';\n\n\nclass NewCampusContainer extends Component {\n\n    componentDidMount(){\n        this.props.fetchAllCampuses();\n    }\n\n    constructor(props){\n        super(props);\n        this.state = {\n            campusId: null,\n            name: \"\",\n            imageUrl: \"https://media.istockphoto.com/photos/university-in-autumn-picture-id173598452?k=20&m=173598452&s=170667a&w=0&h=HxRuZzeSaZKP0f0a634LL2KUDbom5hVSBI30Im9Ei1I=\",\n            address: \"\",\n            description: \"\",\n            redirect: false,\n            redirectId: null,\n            campusExists: false\n        };\n    }\n\n    componentWillUnmount(){\n        this.setState({redirect: false, redirectId: null})\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault(); // Prevent browser reload/refresh after submit\n        this.setState({\n            campusExists: false,\n            redirect: false\n        });\n        let exists = false\n        let campus = {\n            campusId: this.props.allCampuses.length + 1, // auto increment the id by adding 1 to the current number of campuses for the new campus\n            name: this.state.name,\n            imageUrl: this.state.imageUrl,\n            address: this.state.address,\n            description: this.state.description\n        };\n        \n        this.props.allCampuses.forEach(existingCampus => {\n            if(existingCampus.name == campus.name)\n            {\n                exists = true\n                this.setState({\n                    campusExists: true,\n                    redirect: false        \n                });\n            }\n        });\n\n        if(exists == false)\n        {\n                // Add new campus to backend\n            let newCampus = await this.props.addCampus(campus);\n        \n            // Update the state and show the new campus in the redirect\n            this.setState({\n                campusId: null,\n                name: \"\",\n                imageUrl: null,\n                address: \"\",\n                description: \"\",\n                redirect: true,\n                redirectId: newCampus.id,\n                campusExists: false\n            });\n        }\n    }\n\n    render(){\n        if(this.state.campusExists){\n            return(\n                <div className='Campus Exists'>\n                    <Header/>\n                    <br/><br/><br/>\n                    <h1>This campus already exists.</h1>\n                </div>\n            ); \n        }\n        else{\n            if(this.state.redirect){\n                return (<Redirect to={`/campus/${this.state.redirectId}`}/>)\n            }\n    \n            return(\n                <div>\n                    <Header/>\n                    <NewCampusView\n                        handleChange = {this.handleChange}\n                        handleSubmit = {this.handleSubmit}\n                    />\n                </div>\n            ); \n        }\n           \n    }\n}\n\n// Get a list of all the campuses when the store state changes\nconst mapState = (state) => {\n    return{\n        allCampuses: state.allCampuses,\n    };\n}\n\n// Dispatch actions to redux store\nconst mapDispatch = (dispatch) => {\n    return({\n        addCampus: (campus) => dispatch(addCampusThunk(campus)),\n        fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n    })\n}\n\nexport default connect(mapState, mapDispatch)(NewCampusContainer);","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/store/reducers/campuses.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/store/reducers/campus.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/store/reducers/students.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/store/reducers/student.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/containers/Header.js",["259"],"/*==================================================\nHeader.js\n\nIt contains the Header component to be displayed on every page.\nThe header contains navigation links to every other page.\n================================================== */\n// Import \"material\" library for building UI with React components\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\n\n// Define styling for the header\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: 'left',\n    fontType: 'bold',\n    fontFamily: 'sans-serif', \n    fontSize: '35px', \n    color: 'white'\n  },\n  appBar:{\n    backgroundColor: '#63229a',\n    shadows: ['none'],\n    top: '0',\n  },\n  greeting:{\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    width: \"50%\",\n    margin: \"auto\",\n  },\n  links:{\n    textDecoration: 'none',\n  }\n}));\n\n// Header component, displayed on every page\n// Links to every other page\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" elevation={0} className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title} color=\"inherit\" >\n            Campus Management System\n          </Typography>\n      \n          <Link className={classes.links} to={'/'} >\n            <Button variant=\"contained\" color=\"primary\" style={{marginRight: '16px'}}>\n              Home\n            </Button>\n          </Link>\n\n          <Link className={classes.links} to={'/campuses'} >\n            <Button variant=\"contained\" color=\"primary\" style={{marginRight: '16px'}}>\n              All Campuses\n            </Button>\n          </Link>\n\n          <Link className={classes.links} to={'/students'} >\n            <Button variant=\"contained\" color=\"primary\">\n              All Students\n            </Button>\n          </Link>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );    \n}\n\nexport default Header;\n","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/store/thunks.js",["260"],"/*==================================================\n/src/store/thunks.js\n\nIt contains all Thunk Creators and Thunks.\n================================================== */\nimport * as ac from './actions/actionCreators';  // Import Action Creators (\"ac\" keyword Action Creator)\nconst axios = require('axios');\n\n//All Campuses\n// THUNK CREATOR:\nexport const fetchAllCampusesThunk = () => async (dispatch) => {  // The THUNK\n  try {\n    // API \"get\" call to get \"campuses\" data from database\n    let res = await axios.get(`/api/campuses`);  \n    // Call Action Creator to return Action object (type + payload with \"campuses\" data)\n    // Then dispatch the Action object to Reducer to update state \n    dispatch(ac.fetchAllCampuses(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n// Single Campus\n// THUNK CREATOR:\nexport const fetchCampusThunk = (id) => async (dispatch) => {  // The THUNK\n  try {\n    // API \"get\" call to get a student data (based on \"id\")from database\n    let res = await axios.get(`/api/campuses/${id}`);  \n    dispatch(ac.fetchCampus(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n// Edit Campus\n// THUNK CREATOR:\nexport const editCampusThunk = campus => async dispatch => {  // The THUNK\n  try {\n    // API \"put\" call to update campus (based on \"id\" and \"campus\" object's data) from database\n    let updatedCampus = await axios.put(`/api/campuses/${campus.id}`, campus); \n    // Update successful so change state with dispatch\n    dispatch(ac.editCampus(updatedCampus));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n// Add Campus\n// THUNK CREATOR:\nexport const addCampusThunk = (campus) => async (dispatch) => {\n  try {\n    let res = await axios.post(`/api/campuses`, campus);\n    dispatch(ac.addCampus(res.data));\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Delete Campus\n// THUNK CREATOR:\nexport const deleteCampusThunk = campusId => async (dispatch) => {\n  try {\n    let res = await axios.delete(`/api/campuses/${campusId}`);\n    dispatch(ac.deleteCampus(campusId));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// All Students\n// THUNK CREATOR:\nexport const fetchAllStudentsThunk = () => async (dispatch) => {  // The THUNK\n  try {\n    // API \"get\" call to get \"students\" data from database\n    let res = await axios.get(`/api/students`);  \n    // Call Action Creator to return Action object (type + payload with \"students\" data)\n    // Then dispatch the Action object to Reducer to update state \n    dispatch(ac.fetchAllStudents(res.data));  \n  } catch(err) {\n    console.error(err);\n  }\n};\n\n// Add Student\n// THUNK CREATOR:\nexport const addStudentThunk = (student) => async (dispatch) => {  // The THUNK\n  try {\n    // API \"post\" call to add \"student\" object's data to database\n    let res = await axios.post(`/api/students`, student);  \n    // Call Action Creator to return Action object (type + payload with new students data)\n    // Then dispatch the Action object to Reducer to update state \n    dispatch(ac.addStudent(res.data));\n    return res.data;\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n// Delete Student\n// THUNK CREATOR:\nexport const deleteStudentThunk = studentId => async dispatch => {  // The THUNK\n  try {\n    // API \"delete\" call to delete student (based on \"studentID\") from database\n    await axios.delete(`/api/students/${studentId}`);  \n    // Delete successful so change state with dispatch\n    dispatch(ac.deleteStudent(studentId));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n// Edit Student\n// THUNK CREATOR:\nexport const editStudentThunk = student => async dispatch => {  // The THUNK\n  try {\n    // API \"put\" call to update student (based on \"id\" and \"student\" object's data) from database\n    let updatedStudent = await axios.put(`/api/students/${student.id}`, student); \n    // Update successful so change state with dispatch\n    dispatch(ac.editStudent(updatedStudent));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n// Single Student\n// THUNK CREATOR:\nexport const fetchStudentThunk = id => async dispatch => {  // The THUNK\n  try {\n    // API \"get\" call to get a specific student (based on \"id\") data from database\n    let res = await axios.get(`/api/students/${id}`);  \n    // Call Action Creator to return Action object (type + payload with student data)\n    // Then dispatch the Action object to Reducer to display student data \n    dispatch(ac.fetchStudent(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/HomePageView.js",["261"],"/*==================================================\nHomePageView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display the home page.\n================================================== */\nconst HomePageView = () => {\n  // Render Home page view\n  return (\n    <div className=\"homeContainer\" style={{position: 'relative', top: '58px', width: '100vw'}}>\n      \n      <img className=\"homeLogo\" src=\"https://www.scramsystems.com/blog/wp-content/uploads/cartoon-college-campus.jpg\"></img>\n      <div id=\"welcome\">Welcome</div>\n      <div id=\"to\">To</div>\n      <div id=\"websiteTitle\">Campus Management System</div>\n    </div>\n  );    \n}\n\nexport default HomePageView;","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/NewStudentView.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/AllStudentsView.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/NewCampusView.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/index.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/store/actions/actionTypes.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/store/actions/actionCreators.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/AllCampusesView.js",["262"],"/*==================================================\nAllCampusesView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display all campuses.\n================================================== */\nimport { Button } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/AllCampuses.css\";\n\nconst AllCampusesView = (props) => {\n  const {allCampuses ,deleteCampus} = props;\n  // If there is no campus, display a message.\n  if (!props.allCampuses.length) {\n    return (\n    <div>\n        <p className=\"text\">There are no campuses.</p>\n        <p className=\"text\">Please add a new campus</p>\n        <Link to={`newcampus`}>\n          <button>Add New Campus</button>\n        </Link>\n    </div>\n    );\n  }\n\n  // If there is at least one campus, render All Campuses view \n  return (\n    <div className=\"allCampuses\">\n      <h1 className=\"pageTitle\">All Campuses \n        <span>\n          <Link to={`/newcampus`}>\n            <button className=\"addButton\">Add New Campus</button>\n          </Link>\n        </span>\n      </h1>\n      \n      {allCampuses.map((campus) => (\n          <div className=\"campusBox\" key={campus.id}>\n            <Link to={`/campus/${campus.id}`}>\n              <h2>{campus.name}</h2>\n            </Link>\n            <div className=\"campusContainer\">\n              <Link to={`/campus/${campus.id}`} className=\"imageContainer\">\n                <img className=\"campusImage\" src={campus.imageUrl} alt=\"campus_image\" width=\"500\" height=\"500\"/>\n              </Link>\n              <div className=\"informationContainer\">\n                <h3>Campus Id: {campus.id}</h3>\n                <p className=\"text\"> <p className=\"label\">Address: </p> {campus.address} </p>\n                <p className=\"text\"> <p className=\"label\">Description: </p>{campus.description} </p>\n              </div>\n            </div>\n            <button className=\"deleteButton\" onClick={() => deleteCampus(campus.id)}>Delete Campus</button>\n            <br/><br/>\n          </div>\n      ))}\n      <br/>\n    </div>\n  );\n};\n\nAllCampusesView.propTypes = {\n  allCampuses: PropTypes.array.isRequired,\n};\n\nexport default AllCampusesView;","/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/EditCampusView.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/EditStudentView.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/CampusView.js",[],"/Users/shareenawiggins/Desktop/school/frontendApp/client-code/src/components/views/StudentView.js",[],{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","severity":2,"message":"268","line":28,"column":49,"nodeType":"269","messageId":"270","endLine":28,"endColumn":55},{"ruleId":"271","severity":1,"message":"272","line":4,"column":33,"nodeType":"269","messageId":"273","endLine":4,"endColumn":50},{"ruleId":"271","severity":1,"message":"274","line":5,"column":10,"nodeType":"269","messageId":"273","endLine":5,"endColumn":31},{"ruleId":"275","severity":1,"message":"276","line":27,"column":22,"nodeType":"277","messageId":"278","endLine":27,"endColumn":24},{"ruleId":"275","severity":1,"message":"276","line":56,"column":36,"nodeType":"277","messageId":"278","endLine":56,"endColumn":38},{"ruleId":"275","severity":1,"message":"276","line":66,"column":19,"nodeType":"277","messageId":"278","endLine":66,"endColumn":21},{"ruleId":"271","severity":1,"message":"279","line":15,"column":10,"nodeType":"269","messageId":"273","endLine":15,"endColumn":20},{"ruleId":"271","severity":1,"message":"280","line":64,"column":9,"nodeType":"269","messageId":"273","endLine":64,"endColumn":12},{"ruleId":"281","severity":1,"message":"282","line":12,"column":7,"nodeType":"283","endLine":12,"endColumn":119},{"ruleId":"271","severity":1,"message":"284","line":7,"column":10,"nodeType":"269","messageId":"273","endLine":7,"endColumn":16},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],"no-undef","'campus' is not defined.","Identifier","undef","no-unused-vars","'fetchStudentThunk' is defined but never used.","unusedVar","'fetchAllCampusesThunk' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useHistory' is defined but never used.","'res' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]